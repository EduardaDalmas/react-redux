{"ast":null,"code":"var _jsxFileName = \"/Users/eduardabrischdalmas/Documents/GrowDev/react-redux/src/components/Header/index.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Nav } from \"./styles\";\n\nfunction Header({\n  personCount,\n  showAlertTotal\n}) {\n  return React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Total: \", personCount, React.createElement(\"button\", {\n    onClick: () => showAlertTotal(),\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Click\"));\n}\n\nconst mapStateToProps = state => ({\n  personCount: state.person.length\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators(personActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","map":{"version":3,"sources":["/Users/eduardabrischdalmas/Documents/GrowDev/react-redux/src/components/Header/index.js"],"names":["React","connect","Nav","Header","personCount","showAlertTotal","mapStateToProps","state","person","length","mapDispatchToProps","dispatch","bindActionCreators","personActions"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,GAAT,QAAoB,UAApB;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAhB,EAAiD;AAC/C,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACUD,WADV,EAEE;AAAQ,IAAA,OAAO,EAAG,MAAMC,cAAc,EAAtC;AAA0C,IAAA,IAAI,EAAC,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CADF;AAQD;;AAED,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCH,EAAAA,WAAW,EAAEG,KAAK,CAACC,MAAN,CAAaC;AADM,CAAL,CAA7B;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,IACnCC,kBAAkB,CAACC,aAAD,EAAgBF,QAAhB,CADlB;;AAGA,eAAeV,OAAO,CAACK,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CP,MAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { Nav } from \"./styles\";\n\nfunction Header({ personCount, showAlertTotal }) {\n  return (\n    <Nav>\n      Total: {personCount}\n      <button onClick= {() => showAlertTotal()} type=\"button\">\n        Click\n      </button>\n    </Nav>\n  );\n}\n\nconst mapStateToProps = state => ({\n  personCount: state.person.length,\n});\n\nconst mapDispatchToProps = dispatch =>\nbindActionCreators(personActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n"]},"metadata":{},"sourceType":"module"}