{"ast":null,"code":"var _jsxFileName = \"/Users/eduardabrischdalmas/Documents/GrowDev/react-redux/src/Views/Main/index.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Title, Cont, Card, SendButton, MyInput } from \"./styles\";\nimport api from \"../../services/apiCards\";\nimport { TextField } from '@material-ui/core';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CardItem from '../../components/CardItem';\nimport * as personActions from \"../../store/modules/person/actions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from '@material-ui/core/Button';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport Paper from '@material-ui/core/Paper';\nimport LogoutIcon from '@material-ui/icons/ExitToApp';\n\nclass Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [\"Marcelo\", \"Duda\", \"Pedro\"],\n      newPerson: '',\n      cards: [{}],\n      title: '',\n      content: '',\n      show: false\n    };\n\n    this.handleInputChange = event => {\n      const {\n        target\n      } = event;\n\n      if (target.name === 'title') {\n        this.setState({\n          title: target.value\n        });\n      } else {\n        this.setState({\n          content: target.value\n        });\n      }\n    };\n\n    this.handleLogout = event => {\n      localStorage.removeItem('persist:react-cards');\n      window.location.reload();\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        user\n      } = this.props;\n      const response = await api.post('/cards', {\n        title: this.state.title,\n        content: this.state.content\n      }, {\n        headers: {\n          Authorization: `Bearer ${user[0].token}`\n        }\n      });\n      this.setState({\n        cards: [...this.state.cards, {\n          id: response.data.id,\n          title: this.state.title,\n          content: this.state.content\n        }]\n      });\n    };\n\n    this.sendToStore = person => {\n      const {\n        addToPerson\n      } = this.props;\n      addToPerson(person);\n    };\n\n    this.removeToStore = person => {\n      const {\n        removeFromPerson\n      } = this.props;\n      removeFromPerson(person);\n    };\n\n    this.handleDelete = async id => {\n      const {\n        user\n      } = this.props;\n      const response = await api.delete(\"/cards/${id}\", {\n        headers: {\n          Authorization: `Bearer ${user[0].token}`\n        }\n      });\n      this.setState({\n        cards: this.state.cards.filter(item => item.id !== id)\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      user\n    } = this.props;\n\n    if (user.length > 0) {\n      const response = await api.get(\"/cards\", {\n        headers: {\n          Authorization: `Bearer ${user[0].token}`\n        }\n      });\n      this.setState({\n        cards: response.data\n      });\n      console.log(response.data);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {}\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleLogout,\n      startIcon: React.createElement(LogoutIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Recados\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(MyInput, {\n      label: \"Digite um titulo:\",\n      type: \"text\",\n      name: \"title\",\n      onChange: this.handleInputChange,\n      defaultValue: this.state.newCard.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(MyInput, {\n      label: \"Digite um conteudo:\",\n      type: \"text\",\n      name: \"content\",\n      onChange: this.handleInputChange,\n      defaultValue: this.state.newCard.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(SendButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Enviar\"))), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, this.state.cards.map(item => React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(CardItem, {\n      key: item.id,\n      card: item,\n      onDelete: () => this.handleDelete(item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators(personActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","map":{"version":3,"sources":["/Users/eduardabrischdalmas/Documents/GrowDev/react-redux/src/Views/Main/index.js"],"names":["React","Component","connect","bindActionCreators","Title","Cont","Card","SendButton","MyInput","api","TextField","DeleteIcon","CardItem","personActions","IconButton","Button","PostAddIcon","Paper","LogoutIcon","Main","state","persons","newPerson","cards","title","content","show","handleInputChange","event","target","name","setState","value","handleLogout","localStorage","removeItem","window","location","reload","handleSubmit","preventDefault","user","props","response","post","headers","Authorization","token","id","data","sendToStore","person","addToPerson","removeToStore","removeFromPerson","handleDelete","delete","filter","item","componentDidMount","length","get","console","log","componentDidUpdate","prevProps","prevState","render","newCard","map","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport { Title, Cont, Card, SendButton, MyInput } from \"./styles\";\nimport api from \"../../services/apiCards\";\n\nimport { TextField } from '@material-ui/core';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CardItem from '../../components/CardItem';\nimport * as personActions from \"../../store/modules/person/actions\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from '@material-ui/core/Button';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport Paper from '@material-ui/core/Paper';\nimport LogoutIcon from '@material-ui/icons/ExitToApp';\n\n\nclass Main extends Component{\n  state = {\n    persons: [\"Marcelo\", \"Duda\", \"Pedro\"],\n    newPerson: '',\n    cards: [{}],\n    title: '',\n    content: '',\n    show: false,\n  };\n\n  async componentDidMount() {\n    const { user } = this.props;\n    if (user.length > 0 ) {\n      const response = await api.get(\"/cards\", {\n      headers: { Authorization: `Bearer ${user[0].token}`},\n    });\n\n    this.setState({ cards: response.data });\n\n    console.log(response.data);\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState) {};//executa quando altera o state local\n\n  handleInputChange = event => {\n    const { target } = event;\n\n    if (target.name === 'title') {\n      this.setState({ title: target.value });\n    } else {\n      this.setState({ content: target.value });\n    }\n  };\n\n  handleLogout = event => {\n    localStorage.removeItem('persist:react-cards');\n    window.location.reload();\n  }\n\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    const { user } = this.props;\n\n    const response = await api.post(\n      '/cards',\n      {\n        title: this.state.title,\n        content: this.state.content,\n      },\n      { headers: { Authorization: `Bearer ${user[0].token}` } }\n    );\n    this.setState({\n      cards: [\n        ...this.state.cards,\n        {\n          id: response.data.id,\n          title: this.state.title,\n          content: this.state.content,\n        },\n      ],\n    });\n  };\n\n  sendToStore = (person) => {\n    const { addToPerson } = this.props;\n    addToPerson(person);\n  }\n\n  removeToStore = person => {\n    const { removeFromPerson } = this.props;\n\n    removeFromPerson(person);\n  }\n\n  handleDelete = async id => {\n    const {user} = this.props;\n    const response = await api.delete(\"/cards/${id}\",{\n        headers: { Authorization: `Bearer ${user[0].token}`},\n      });\n\n    this.setState({\n      cards: this.state.cards.filter(item => item.id !== id),\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <Card>\n          <ul>\n              <Button onClick={this.handleLogout} startIcon={<LogoutIcon />}></Button>\n\n              <Title>Recados</Title>\n              <form onSubmit={this.handleSubmit}>\n                    <MyInput\n                      label=\"Digite um titulo:\"\n                      type=\"text\"\n                      name=\"title\"\n                      onChange={this.handleInputChange}\n                      defaultValue={this.state.newCard.title}\n                    />\n                    <MyInput\n                      label=\"Digite um conteudo:\"\n                      type=\"text\"\n                      name=\"content\"\n                      onChange={this.handleInputChange}\n                      defaultValue={this.state.newCard.content}\n                    />\n                    <SendButton type=\"submit\">Enviar</SendButton>\n              </form>\n          </ul>\n\n\n          <ul>\n             {this.state.cards.map(item => (\n                <Paper>\n                  <CardItem\n                    key={item.id}\n                    card={item}\n                    onDelete={() => this.handleDelete(item.id)}\n                  />\n                </Paper>\n              ))}\n          </ul>\n      </Card>\n    </>\n  );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nconst mapDispatchToProps = dispatch =>\nbindActionCreators(personActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n"]},"metadata":{},"sourceType":"module"}