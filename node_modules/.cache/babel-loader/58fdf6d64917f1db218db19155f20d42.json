{"ast":null,"code":"var _jsxFileName = \"/Users/eduardabrischdalmas/Documents/GrowDev/react-redux/src/Views/Main/index.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Title, Cont, Card, SendButton, MyInput } from \"./styles\";\nimport api from \"../../services/apiCards\";\nimport { TextField } from '@material-ui/core';\nimport PersonItem from '../../components/PersonItem';\nimport * as personActions from \"../../store/modules/person/actions\";\nimport CakeIcon from '@material-ui/icons/Cake';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from '@material-ui/core/Button';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\n\nclass Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [\"Marcelo\", \"Duda\", \"Pedro\"],\n      newPerson: '',\n      cards: []\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        newPerson: e.target.value\n      });\n    };\n\n    this.handleLogout = event => {\n      localStorage.removeItem('persist:react-cards');\n      window.location.reload();\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.sendToStore(this.state.newPerson);\n      this.setState({\n        persons: [...this.state.persons, this.state.newPerson],\n        newPerson: ''\n      });\n    };\n\n    this.sendToStore = person => {\n      const {\n        addToPerson\n      } = this.props;\n      addToPerson(person);\n    };\n\n    this.removeToStore = person => {\n      const {\n        removeFromPerson\n      } = this.props;\n      removeFromPerson(person);\n    };\n\n    this.handleDelete = person => {\n      this.setState({\n        persons: this.state.persons.filter(item => item !== person)\n      });\n      this.removeToStore(person);\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      user\n    } = this.props;\n\n    if (user.length > 0) {\n      const response = await api.get(\"/cards\", {\n        headers: {\n          Authorization: `Bearer ${user[0].token}`\n        }\n      });\n      this.setState({\n        cards: response.data\n      });\n      console.log(response.data);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {}\n\n  render() {\n    return React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outlined\",\n      onClick: this.handleLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Logout\"), React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Recados \", React.createElement(PostAddIcon, {\n      color: \"secundary\",\n      style: {\n        fontSize: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(Cont, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.cards.map(item => React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, (item.title, item.content)))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: \"Digite um nome\",\n      type: \"text\",\n      onChange: this.handleInputChange,\n      value: this.state.newPerson,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(IconButton, {\n      onClick: this.handleSubmit,\n      \"aria-label\": \"salvar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(PersonAddIcon, {\n      type: \"button\",\n      style: {\n        fontSize: 40\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators(personActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","map":{"version":3,"sources":["/Users/eduardabrischdalmas/Documents/GrowDev/react-redux/src/Views/Main/index.js"],"names":["React","Component","connect","bindActionCreators","Title","Cont","Card","SendButton","MyInput","api","TextField","PersonItem","personActions","CakeIcon","PersonAddIcon","IconButton","Button","PostAddIcon","Main","state","persons","newPerson","cards","handleInputChange","e","setState","target","value","handleLogout","event","localStorage","removeItem","window","location","reload","handleSubmit","preventDefault","sendToStore","person","addToPerson","props","removeToStore","removeFromPerson","handleDelete","filter","item","componentDidMount","user","length","response","get","headers","Authorization","token","data","console","log","componentDidUpdate","prevProps","prevState","render","fontSize","map","title","content","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport { Title, Cont, Card, SendButton, MyInput } from \"./styles\";\nimport api from \"../../services/apiCards\";\n\nimport { TextField } from '@material-ui/core';\n\nimport PersonItem from '../../components/PersonItem';\nimport * as personActions from \"../../store/modules/person/actions\";\n\nimport CakeIcon from '@material-ui/icons/Cake';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from '@material-ui/core/Button';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\n\n\nclass Main extends Component{\n  state = {\n    persons: [\"Marcelo\", \"Duda\", \"Pedro\"],\n    newPerson: '',\n    cards: [],\n  };\n\n  async componentDidMount() {\n    const { user } = this.props;\n    if (user.length > 0 ) {\n      const response = await api.get(\"/cards\", {\n      headers: { Authorization: `Bearer ${user[0].token}`},\n    });\n\n    this.setState({ cards: response.data });\n\n    console.log(response.data);\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState) {};//executa quando altera o state local\n\n  handleInputChange = e => {\n    this.setState({newPerson: e.target.value});\n  }\n\n  handleLogout = event => {\n    localStorage.removeItem('persist:react-cards');\n    window.location.reload();\n  }\n\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.sendToStore(this.state.newPerson);\n\n    this.setState({persons: [...this.state.persons, this.state.newPerson],\n      newPerson: '',\n    });\n  }\n\n  sendToStore = (person) => {\n    const { addToPerson } = this.props;\n    addToPerson(person);\n  }\n\n  removeToStore = person => {\n    const { removeFromPerson } = this.props;\n\n    removeFromPerson(person);\n  }\n\n  handleDelete = person => {\n    this.setState({\n      persons: this.state.persons.filter(item => item !== person),\n    });\n\n    this.removeToStore(person);\n  };\n\n  render() {\n    return (\n      <Card>\n      <Button variant=\"outlined\" onClick={this.handleLogout}>Logout</Button>\n\n      <Title>Recados <PostAddIcon color=\"secundary\" style={{ fontSize: 50 }}/></Title>\n        <Cont>\n        <ul>\n\n          {\n            this.state.cards.map(item =>(\n            <h1>{item.title, item.content}</h1>\n            ))}\n\n        </ul>\n        <br/>\n        <form onSubmit={this.handleSubmit}>\n        <TextField\n          label=\"Digite um nome\"\n          type=\"text\"\n          onChange={this.handleInputChange}\n          value={this.state.newPerson}\n        />\n        <IconButton onClick={this.handleSubmit} aria-label=\"salvar\">\n          <PersonAddIcon type=\"button\" style={{ fontSize: 40 }}/>\n      </IconButton>\n        </form>\n        </Cont>\n\n      </Card>\n\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nconst mapDispatchToProps = dispatch =>\nbindActionCreators(personActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n"]},"metadata":{},"sourceType":"module"}