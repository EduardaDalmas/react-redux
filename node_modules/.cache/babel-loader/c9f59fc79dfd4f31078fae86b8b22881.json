{"ast":null,"code":"var _jsxFileName = \"/Users/eduardabrischdalmas/Documents/GrowDev/react-redux/src/Views/Main/index.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Title, Cont, Card, SendButton, MyInput } from \"./styles\";\nimport api from \"../../services/apiCards\";\nimport { TextField } from '@material-ui/core';\nimport PersonItem from '../../components/PersonItem';\nimport * as personActions from \"../../store/modules/person/actions\";\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from '@material-ui/core/Button';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport Paper from '@material-ui/core/Paper';\n\nclass Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [\"Marcelo\", \"Duda\", \"Pedro\"],\n      newPerson: '',\n      cards: []\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        newPerson: e.target.value\n      });\n    };\n\n    this.handleLogout = event => {\n      localStorage.removeItem('persist:react-cards');\n      window.location.reload();\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        login\n      } = this.props;\n      const response = await api.post('/login', {\n        email: this.state.login,\n        password: this.state.password\n      });\n      const {\n        user,\n        token\n      } = response.data;\n      user.token = token;\n      login(user);\n    };\n\n    this.sendToStore = person => {\n      const {\n        addToPerson\n      } = this.props;\n      addToPerson(person);\n    };\n\n    this.removeToStore = person => {\n      const {\n        removeFromPerson\n      } = this.props;\n      removeFromPerson(person);\n    };\n\n    this.handleDelete = async id => {\n      const {\n        user\n      } = this.props;\n      const response = await api.delete(\"/cards/${id}\", {\n        headers: {\n          Authorization: `Bearer ${user[0].token}`\n        }\n      });\n      this.setState({\n        cards: this.state.cards.filter(item => item.id !== id)\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      user\n    } = this.props;\n\n    if (user.length > 0) {\n      const response = await api.get(\"/cards\", {\n        headers: {\n          Authorization: `Bearer ${user[0].token}`\n        }\n      });\n      this.setState({\n        cards: response.data\n      });\n      console.log(response.data);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {}\n\n  render() {\n    return React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outlined\",\n      onClick: this.handleLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Logout\"), React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Recados \", React.createElement(PostAddIcon, {\n      color: \"secundary\",\n      style: {\n        fontSize: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(Cont, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.state.cards.map(item => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      \"background-color\": \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, item.title), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, item.content), React.createElement(\"button\", {\n      onDelete: this.handleDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Delete\"))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      MyInput: true,\n      label: \"Digite o titulo:\",\n      name: \"title\",\n      type: \"text\",\n      onChange: this.handleSubmit,\n      MyInput: true,\n      label: \"Digite o conteudo:\",\n      name: \"content\",\n      type: \"text\",\n      onChange: this.handleSubmit,\n      value: this.state.newCard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(IconButton, {\n      onClick: this.handleSubmit,\n      \"aria-label\": \"salvar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(PersonAddIcon, {\n      type: \"button\",\n      style: {\n        fontSize: 40\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators(personActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","map":{"version":3,"sources":["/Users/eduardabrischdalmas/Documents/GrowDev/react-redux/src/Views/Main/index.js"],"names":["React","Component","connect","bindActionCreators","Title","Cont","Card","SendButton","MyInput","api","TextField","PersonItem","personActions","PersonAddIcon","IconButton","Button","PostAddIcon","Paper","Main","state","persons","newPerson","cards","handleInputChange","e","setState","target","value","handleLogout","event","localStorage","removeItem","window","location","reload","handleSubmit","preventDefault","login","props","response","post","email","password","user","token","data","sendToStore","person","addToPerson","removeToStore","removeFromPerson","handleDelete","id","delete","headers","Authorization","filter","item","componentDidMount","length","get","console","log","componentDidUpdate","prevProps","prevState","render","fontSize","map","title","content","newCard","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport { Title, Cont, Card, SendButton, MyInput } from \"./styles\";\nimport api from \"../../services/apiCards\";\n\nimport { TextField } from '@material-ui/core';\n\nimport PersonItem from '../../components/PersonItem';\nimport * as personActions from \"../../store/modules/person/actions\";\n\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from '@material-ui/core/Button';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport Paper from '@material-ui/core/Paper';\n\n\nclass Main extends Component{\n  state = {\n    persons: [\"Marcelo\", \"Duda\", \"Pedro\"],\n    newPerson: '',\n    cards: [],\n  };\n\n  async componentDidMount() {\n    const { user } = this.props;\n    if (user.length > 0 ) {\n      const response = await api.get(\"/cards\", {\n      headers: { Authorization: `Bearer ${user[0].token}`},\n    });\n\n    this.setState({ cards: response.data });\n\n    console.log(response.data);\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState) {};//executa quando altera o state local\n\n  handleInputChange = e => {\n    this.setState({newPerson: e.target.value});\n  }\n\n  handleLogout = event => {\n    localStorage.removeItem('persist:react-cards');\n    window.location.reload();\n  }\n\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    const { login } = this.props;\n\n    const response = await api.post('/login', {\n      email: this.state.login,\n      password: this.state.password\n    });\n\n    const { user, token } = response.data;\n\n    user.token = token;\n    login(user);\n\n  };\n\n  sendToStore = (person) => {\n    const { addToPerson } = this.props;\n    addToPerson(person);\n  }\n\n  removeToStore = person => {\n    const { removeFromPerson } = this.props;\n\n    removeFromPerson(person);\n  }\n\n  handleDelete = async id => {\n    const {user} = this.props;\n    const response = await api.delete(\"/cards/${id}\",{\n        headers: { Authorization: `Bearer ${user[0].token}`},\n      });\n\n    this.setState({\n      cards: this.state.cards.filter(item => item.id !== id),\n    })\n  };\n\n  render() {\n    return (\n      <Card>\n      <Button variant=\"outlined\" onClick={this.handleLogout}>Logout</Button>\n\n      <Title>Recados <PostAddIcon color=\"secundary\" style={{ fontSize: 50 }}/></Title>\n        <Cont>\n        <ul>\n          {this.state.cards.map(item =>(\n            <li>\n              <Paper background-color=\"green\">\n              <h3>{item.title}</h3>\n              <p>{item.content}</p>\n              <button onDelete={this.handleDelete}>Delete</button>\n              </Paper>\n            </li>\n            ))}\n        </ul>\n        <br/>\n        <form onSubmit={this.handleSubmit}>\n        <TextField\n        MyInput label=\"Digite o titulo:\" name=\"title\" type=\"text\" onChange={this.handleSubmit}\n        MyInput label=\"Digite o conteudo:\" name=\"content\" type=\"text\" onChange={this.handleSubmit}\n        value={this.state.newCard}\n        />\n        <IconButton onClick={this.handleSubmit} aria-label=\"salvar\">\n          <PersonAddIcon type=\"button\" style={{ fontSize: 40 }}/>\n      </IconButton>\n        </form>\n        </Cont>\n\n      </Card>\n\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nconst mapDispatchToProps = dispatch =>\nbindActionCreators(personActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n"]},"metadata":{},"sourceType":"module"}