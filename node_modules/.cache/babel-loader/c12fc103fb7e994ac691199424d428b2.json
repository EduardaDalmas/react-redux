{"ast":null,"code":"var _jsxFileName = \"/Users/eduardabrischdalmas/Documents/GrowDev/react-redux/src/Views/Login/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as UserActions from '../../store/modules/user/actions';\nimport { Title, Card, SendButton, MyInput } from './styles';\nimport api from '../../services/apiCards';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      login: '',\n      password: ''\n    };\n\n    this.handleInputChange = event => {\n      const {\n        target\n      } = event;\n\n      if (target.name === 'login') {\n        this.setState({\n          login: target.value\n        });\n      } else {\n        this.setState({\n          password: target.value\n        });\n      }\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        login\n      } = this.props;\n      const response = await api.post('/login', {\n        email: this.state.login,\n        password: this.state.password\n      }).catch(function (error) {\n        alert('Login inválido!');\n      });\n\n      if (response) {\n        const {\n          user,\n          token\n        } = response.data;\n        user.token = token;\n        login(user);\n      }\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps, prevState) {}\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"forms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(MyInput, {\n      label: \"Digite seu email:\",\n      name: \"login\",\n      type: \"text\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(MyInput, {\n      label: \"Digite sua senha:\",\n      name: \"password\",\n      type: \"password\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(SendButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Entrar\")))))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(UserActions, dispatch);\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/eduardabrischdalmas/Documents/GrowDev/react-redux/src/Views/Login/index.js"],"names":["React","Component","connect","bindActionCreators","UserActions","Title","Card","SendButton","MyInput","api","Login","state","login","password","handleInputChange","event","target","name","setState","value","handleSubmit","preventDefault","props","response","post","email","catch","error","alert","user","token","data","componentDidMount","componentDidUpdate","prevProps","prevState","render","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AAEA,OAAO,KAAKC,WAAZ,MAA6B,kCAA7B;AAEA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,UAAtB,EAAkCC,OAAlC,QAAiD,UAAjD;AAEA,OAAOC,GAAP,MAAgB,yBAAhB;;AAEA,MAAMC,KAAN,SAAoBT,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BU,KAD4B,GACpB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KADoB;;AAAA,SAU5BC,iBAV4B,GAURC,KAAK,IAAI;AAC3B,YAAM;AAAEC,QAAAA;AAAF,UAAaD,KAAnB;;AACA,UAAIC,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAC3B,aAAKC,QAAL,CAAc;AAAEN,UAAAA,KAAK,EAAEI,MAAM,CAACG;AAAhB,SAAd;AACD,OAFD,MAEO;AACL,aAAKD,QAAL,CAAc;AAAEL,UAAAA,QAAQ,EAAEG,MAAM,CAACG;AAAnB,SAAd;AACD;AACF,KAjB2B;;AAAA,SAmB5BC,YAnB4B,GAmBb,MAAML,KAAN,IAAe;AAC5BA,MAAAA,KAAK,CAACM,cAAN;AACA,YAAM;AAAET,QAAAA;AAAF,UAAY,KAAKU,KAAvB;AAEA,YAAMC,QAAQ,GAAG,MAAMd,GAAG,CACvBe,IADoB,CACf,QADe,EACL;AACdC,QAAAA,KAAK,EAAE,KAAKd,KAAL,CAAWC,KADJ;AAEdC,QAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE;AAFP,OADK,EAKpBa,KALoB,CAKd,UAASC,KAAT,EAAgB;AACrBC,QAAAA,KAAK,CAAC,iBAAD,CAAL;AACD,OAPoB,CAAvB;;AAQA,UAAIL,QAAJ,EAAc;AACZ,cAAM;AAAEM,UAAAA,IAAF;AAAQC,UAAAA;AAAR,YAAkBP,QAAQ,CAACQ,IAAjC;AACAF,QAAAA,IAAI,CAACC,KAAL,GAAaA,KAAb;AACAlB,QAAAA,KAAK,CAACiB,IAAD,CAAL;AACD;AACF,KApC2B;AAAA;;AAM5BG,EAAAA,iBAAiB,GAAG,CAAE;;AAEtBC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB,CAAE;;AA8B3CC,EAAAA,MAAM,GAAG;AACP,WACE,0CACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAM,MAAA,QAAQ,EAAE,KAAKhB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACE,MAAA,KAAK,EAAC,mBADR;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,QAAQ,EAAE,KAAKN,iBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE,oBAAC,OAAD;AACE,MAAA,KAAK,EAAC,mBADR;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,QAAQ,EAAE,KAAKA,iBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAaE,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,CAFF,CADF,CADF,CADF,CADF,CADF;AA4BD;;AAnE2B;;AAsE9B,MAAMuB,kBAAkB,GAAGC,QAAQ,IACjCnC,kBAAkB,CAACC,WAAD,EAAckC,QAAd,CADpB;;AAGA,eAAepC,OAAO,CAAC,IAAD,EAAOmC,kBAAP,CAAP,CAAkC3B,KAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport * as UserActions from '../../store/modules/user/actions';\n\nimport { Title, Card, SendButton, MyInput } from './styles';\n\nimport api from '../../services/apiCards';\n\nclass Login extends Component {\n  state = {\n    login: '',\n    password: '',\n  };\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps, prevState) {}\n\n  handleInputChange = event => {\n    const { target } = event;\n    if (target.name === 'login') {\n      this.setState({ login: target.value });\n    } else {\n      this.setState({ password: target.value });\n    }\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    const { login } = this.props;\n\n    const response = await api\n      .post('/login', {\n        email: this.state.login,\n        password: this.state.password,\n      })\n      .catch(function(error) {\n        alert('Login inválido!');\n      });\n    if (response) {\n      const { user, token } = response.data;\n      user.token = token;\n      login(user);\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <Card>\n          <center>\n            <div className=\"forms\">\n              <ul>\n                <Title>Login</Title>\n                <form onSubmit={this.handleSubmit}>\n                  <MyInput\n                    label=\"Digite seu email:\"\n                    name=\"login\"\n                    type=\"text\"\n                    onChange={this.handleInputChange}\n                  />\n                  <MyInput\n                    label=\"Digite sua senha:\"\n                    name=\"password\"\n                    type=\"password\"\n                    onChange={this.handleInputChange}\n                  />\n                  <SendButton type=\"submit\">Entrar</SendButton>\n                </form>\n              </ul>\n            </div>\n          </center>\n        </Card>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(UserActions, dispatch);\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}