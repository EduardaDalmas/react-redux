{"ast":null,"code":"var _jsxFileName = \"/Users/eduardabrischdalmas/Documents/GrowDev/react-redux/src/Views/Main/index.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Title, Cont, Card, SendButton, MyInput } from \"./styles\";\nimport { TextField } from '@material-ui/core';\nimport PersonItem from '../../components/PersonItem';\nimport * as personActions from \"../../store/modules/person/actions\";\nimport CakeIcon from '@material-ui/icons/Cake';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport IconButton from \"@material-ui/core/IconButton\";\n\nclass Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [\"Marcelo\", \"Duda\", \"Pedro\"],\n      newPerson: ''\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        newPerson: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.sendToStore(this.state.newPerson);\n      this.setState({\n        persons: [...this.state.persons, this.state.newPerson],\n        newPerson: ''\n      });\n    };\n\n    this.sendToStore = person => {\n      const {\n        addToPerson\n      } = this.props;\n      addToPerson(person);\n    };\n\n    this.removeToStore = person => {\n      const {\n        removeFromPerson\n      } = this.props;\n      removeFromPerson(person);\n    };\n\n    this.handleDelete = person => {\n      this.setState({\n        persons: this.state.persons.filter(item => item !== person)\n      });\n    };\n  }\n\n  componentDidMount() {\n    const list = localStorage.getItem('persons');\n    const {\n      person\n    } = this.props;\n    console.log(person);\n\n    if (list) {\n      this.setState({\n        persons: JSON.parse(list)\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState !== this.state.persons) {\n      localStorage.setItem('persons', JSON.stringify(this.state.persons));\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Lista de Aniversariantes do m\\xEAs \", React.createElement(CakeIcon, {\n      color: \"secundary\",\n      style: {\n        fontSize: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(Cont, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.persons.map(item => React.createElement(PersonItem, {\n      key: item,\n      person: item,\n      onDelete: () => this.handleDelete(item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: \"Digite um nome\",\n      type: \"text\",\n      onChange: this.handleInputChange,\n      value: this.state.newPerson,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(IconButton, {\n      onClick: this.handleSubmit,\n      \"aria-label\": \"salvar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(PersonAddIcon, {\n      type: \"button\",\n      style: {\n        fontSize: 40\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  person: state.person\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators(personActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","map":{"version":3,"sources":["/Users/eduardabrischdalmas/Documents/GrowDev/react-redux/src/Views/Main/index.js"],"names":["React","Component","connect","bindActionCreators","Title","Cont","Card","SendButton","MyInput","TextField","PersonItem","personActions","CakeIcon","PersonAddIcon","IconButton","Main","state","persons","newPerson","handleInputChange","e","setState","target","value","handleSubmit","preventDefault","sendToStore","person","addToPerson","props","removeToStore","removeFromPerson","handleDelete","filter","item","componentDidMount","list","localStorage","getItem","console","log","JSON","parse","componentDidUpdate","prevProps","prevState","setItem","stringify","render","fontSize","map","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport { Title, Cont, Card, SendButton, MyInput } from \"./styles\";\n\nimport { TextField } from '@material-ui/core';\n\nimport PersonItem from '../../components/PersonItem';\nimport * as personActions from \"../../store/modules/person/actions\";\n\nimport CakeIcon from '@material-ui/icons/Cake';\n\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\n\nimport IconButton from \"@material-ui/core/IconButton\";\n\n\nclass Main extends Component{\n  state = {\n    persons: [\"Marcelo\", \"Duda\", \"Pedro\"],\n    newPerson: '',\n  };\n\n  componentDidMount() {\n    const list = localStorage.getItem('persons');\n    const { person } = this.props;\n    console.log(person);\n\n    if(list) {\n      this.setState({ persons: JSON.parse(list) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(prevState !== this.state.persons) {\n      localStorage.setItem('persons', JSON.stringify(this.state.persons));\n    }\n  }\n\n  handleInputChange = e => {\n    this.setState({newPerson: e.target.value});\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.sendToStore(this.state.newPerson);\n\n    this.setState({persons: [...this.state.persons, this.state.newPerson],\n      newPerson: '',\n    });\n  }\n\n  sendToStore = (person) => {\n    const { addToPerson } = this.props;\n    addToPerson(person);\n  }\n\n  removeToStore = person => {\n    const { removeFromPerson } = this.props;\n\n    removeFromPerson(person);\n  }\n\n  handleDelete = person => {\n    this.setState({\n      persons: this.state.persons.filter(item => item !== person),\n\n    })\n  }\n\n  render() {\n    return (\n      <>\n      <Card>\n      <Title>Lista de Aniversariantes do mês <CakeIcon color=\"secundary\" style={{ fontSize: 50 }}/></Title>\n        <Cont>\n        <ul>\n          {\n            this.state.persons.map(item =>(\n            <PersonItem\n              key = {item}\n              person = {item}\n              onDelete = {() => this.handleDelete(item)}\n            />\n            ))}\n        </ul>\n        <br/>\n        <form onSubmit={this.handleSubmit}>\n        <TextField\n          label=\"Digite um nome\"\n          type=\"text\"\n          onChange={this.handleInputChange}\n          value={this.state.newPerson}\n        />\n        <IconButton onClick={this.handleSubmit} aria-label=\"salvar\">\n          <PersonAddIcon type=\"button\" style={{ fontSize: 40 }}/>\n      </IconButton>\n        </form>\n        </Cont>\n\n      </Card>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  person: state.person,\n});\n\nconst mapDispatchToProps = dispatch =>\nbindActionCreators(personActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n"]},"metadata":{},"sourceType":"module"}